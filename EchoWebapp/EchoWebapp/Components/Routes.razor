
<Router AppAssembly="typeof(Program).Assembly" AdditionalAssemblies="new[] { typeof(Client._Imports).Assembly }">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)">
            <NotAuthorized>
                <EchoWebapp.Components.Pages.RedirectToLogin></EchoWebapp.Components.Pages.RedirectToLogin>
            </NotAuthorized>
            <Authorizing>
                Wait...
            </Authorizing>
        </AuthorizeRouteView>
        @*  <RouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)" />
        <FocusOnNavigate RouteData="routeData" Selector="h1" /> *@
    </Found>
    <NotFound>
        <PageTitle>not found</PageTitle>
        <LayoutView Layout="@typeof(Layout.MainLayout)">
            <p role="alert">Sorry, there's noting at this address.</p>
        </LayoutView>
    </NotFound>
</Router>
@code{
    [CascadingParameter]
    public Task<AuthenticationState> AuthTask { get; set; }

    [Inject] 
    private AuthenticationStateProvider AuthState { get; set; }

    private System.Security.Claims.ClaimsPrincipal user;

    protected async override Task OnInitializedAsync()
    {
        var authState = await AuthTask;
        this.user = authState.User;
    }

    // private async Task ChangeUser(ChangeEventArgs e)
    // {
    //     var en = Enum.Parse<TestUserType>(e.Value.ToString());
    //     var authState = await ((CustomRevalidatingAuthenticationStateProvider)AuthState).ChangeUser(en);
    //     this.user = authState.User;
    // }
}