@using CoreLib.DTO.EchoCore.UserCore
@using CoreLib.Entities.EchoCore.AccountCore
@*
    Layout for the Scrollable list that exists within the FriendsViewComponent in the pending section.

    This component holds all requests and allows the user to search within the requests to filter them.

    Clicking a request should open the profile of the other user.
*@
@if (filtered != null && filtered?.Count > 0)
{
    <MudPaper Square Height="5vh" Class="px-3 mb-6" Elevation="0">
         <MudTextField Placeholder=" Search" @bind-Value="searchTerm"
                       @onkeyup="(()=>SearchChanged())" Immediate />
     </MudPaper>
    <MudText Class="px-5 py-2" Typo="Typo.button">Pending - @List.Count()</MudText>
    <MudList Clickable="true">
        @foreach (var r in filtered.OrderBy(x => x.Person.DisplayName))
        {
            <MudDivider />
            <MudListItem Dense="true" Class="mb-3 mt-2">
                <FriendRequestComponent Request="r" />
            </MudListItem>
        }
    </MudList>
}
else
{
    <MudPaper Square Class="px-3 mb-6" Elevation="0">
         <MudText>There are no pending friend requests at the moment.</MudText>
     </MudPaper>
}
@code {
    public string searchTerm { get; set; } = "";

    [Parameter]
    public ICollection<FriendRequestDTO> List { get; set; }

    public ICollection<FriendRequestDTO> filtered { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            filtered = List; 
            StateHasChanged();
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    void SearchChanged()
    {
        Console.WriteLine(searchTerm);
        filtered = List.Where(e => e.Person.DisplayName.ToLower().Contains(searchTerm.ToLower())).ToList();
        StateHasChanged();
    }
}
