@using CoreLib.DTO.EchoCore.UserCore
@using CoreLib.Entities.EchoCore.AccountCore
@using MudBlazor
@*
    Layout for the friend list that exists within the friendsviewcomponent.

    This component holds all friends and allows the user to search within the friends to filter them.

    Clicking a friend allows the user to view the their profile.

    You can navigate directly to your private chat with the friend by clicking message or start call

    User can also delete a friend directly from the friendslist.
*@
@* <h3>FriendListComponent</h3> *@
@if (List.Count > 0)
{

    @if (displayAll)
    {
        <MudPaper Square Height="5vh" Class="px-3 mb-6" Elevation="0">
             <MudTextField Placeholder=" Search" @bind-Value="searchTerm"
                           @onkeyup="(()=>SearchChanged())" Immediate />
         </MudPaper>
        <MudText Class="px-5 py-2" Typo="Typo.button">All - @List.Count()</MudText>
        <MudList Clickable="true">
            @foreach (var u in filtered.OrderBy(x => x.Name))
            {
                <MudDivider />
                <MudListItem Dense="true" Class="mb-3 mt-2">
                    <FriendComponent User="u" />
                </MudListItem>
            }
        </MudList>
    }
    else
    {
        <MudPaper Square Height="5vh" Class="px-3 mb-6" Elevation="0">
             <MudTextField Placeholder=" Search" @bind-Value="searchTerm"
                           @onkeyup="(()=>SearchChanged())" Immediate />
         </MudPaper>
        <MudText Class="px-5 py-2" Typo="Typo.button">Online - @(List.Where(e => e.ActiveStatus.Name != "Offline").Count())</MudText>
        <MudList Clickable="true">
            @foreach (var u in filtered?.Where(e => e.ActiveStatus.Name != "Offline").OrderBy(x => x.Name))
            {
                <MudDivider />
                <MudListItem Dense="true" Class="mb-3 mt-2">
                    <FriendComponent User="u" />
                </MudListItem>
            }
        </MudList>
    }

}
else
{
    <MudPaper Square Class="px-3 mb-6" Elevation="0">
         <MudText>Sorry, it looks like you don't have any friends yet.</MudText>
    </MudPaper>
}

@code {
    public string searchTerm = "";
    public List<UserDTO> filtered = new();

    [Parameter]
    public bool displayAll { get; set; } = false;

    [Parameter]
    public List<UserDTO> List { get; set; }

    public FriendListComponent()
    {
        if (List != null)
            filtered = List;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    void SearchChanged()
    {
        Console.WriteLine(searchTerm);
        filtered = List.Where(e => e.Name.ToLower().Contains(searchTerm.ToLower())).ToList();
        StateHasChanged();
    }
}