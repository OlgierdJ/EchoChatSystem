@using CoreLib.Entities.EchoCore.AccountCore
@using MudBlazor
@*
    Layout for the friend list that exists within the friendsviewcomponent.

    This component holds all friends and allows the user to search within the friends to filter them.

    Clicking a friend allows the user to view the their profile.

    You can navigate directly to your private chat with the friend by clicking message or start call

    User can also delete a friend directly from the friendslist.
*@
@* <h3>FriendListComponent</h3> *@
@if (displayAll)
{
    <MudPaper Square Height="5vh" Class="px-3 mb-6" Elevation="0">
         <MudTextField Placeholder=" Search" @bind-Value="searchTerm"
                       @onkeyup="(()=>SearchChanged())" Immediate />
     </MudPaper>
    <MudText Class="px-5 py-2" Typo="Typo.button">All - @accounts.Count()</MudText>
    <MudList Clickable="true">
        @foreach (var c in filtered.OrderBy(x => x.Name))
        {
            <MudDivider />
            <MudListItem Dense="true" Class="mb-3 mt-2">
                <FriendComponent Account="c" />
            </MudListItem>
        }
    </MudList>
}
else
{
    <MudPaper Square Height="5vh" Class="px-3 mb-6" Elevation="0">
         <MudTextField Placeholder=" Search" @bind-Value="searchTerm"
                       @onkeyup="(()=>SearchChanged())" Immediate />
     </MudPaper>
    <MudText Class="px-5 py-2" Typo="Typo.button">Online - @(accounts.Where(e => e.ActivityStatus.Name != "Offline").Count())</MudText>
    <MudList Clickable="true">
        @foreach (var c in filtered.Where(e => e.ActivityStatus.Name != "Offline").OrderBy(x => x.Name))
        {
            <MudDivider />
            <MudListItem Dense="true" Class="mb-3 mt-2">
                <FriendComponent Account="c" />
            </MudListItem>
        }
    </MudList>
}

@code {
    public string searchTerm = "";
    public List<Account> filtered;

    [Parameter]
    public bool displayAll { get; set; } = false;

    public FriendListComponent()
    {
        filtered = accounts;
    }

    // DUMMY DATA
    public List<Account> accounts = new(){
        new Account() { Id = 112, Name = "TheDoe",
        Profile = new AccountProfile(){ AvatarFileURL = "https://us.tonies.com/cdn/shop/products/Tonies-PDP-Assets-Nemo-Single.jpg", },
            ActivityStatus = new AccountActivityStatus(){ Name = "Online", Icon = Icons.Material.Filled.Circle, IconColor = Color.Success.ToString()
        }, TimeCreated = DateTime.Now.AddDays(-17) },
        new Account() { Id = 113, Name = "BobTheBuilder",
            Profile = new AccountProfile(){ AvatarFileURL = "https://a1cf74336522e87f135f-2f21ace9a6cf0052456644b80fa06d4f.ssl.cf2.rackcdn.com/images/characters/large/800/Shrek.Shrek.webp", },
            ActivityStatus = new AccountActivityStatus(){ Name = "Online", Icon = Icons.Material.Filled.Circle, IconColor = Color.Success.ToString()
        }, TimeCreated = DateTime.Now.AddDays(-16) },
        new Account() { Id = 114, Name = "Mary Jane", Profile = new AccountProfile(){ AvatarFileURL = "https://static.wikia.nocookie.net/marvelcinematicuniverse/images/3/35/IronMan-EndgameProfile.jpg", },
            ActivityStatus = new AccountActivityStatus(){ Name = "Away", Icon = Icons.Material.Filled.Brightness2, IconColor = Color.Warning.ToString()
        }, TimeCreated = DateTime.Now.AddDays(-12) },
        new Account() { Id = 115, Name = "Billie Jean",  Profile = new AccountProfile(){ AvatarFileURL = "https://helios-i.mashable.com/imagery/articles/02R4UBVAJlHadovaNQfVpyG/images-1.fill.size_2000x1124.v1611703273.jpg", },
            ActivityStatus = new AccountActivityStatus(){ Name = "Offline", Icon = Icons.Material.Filled.StopCircle, IconColor = "Dark"
        }, TimeCreated = DateTime.Now.AddDays(-5) },
        new Account() { Id = 116, Name = "Jeppe", Profile = new AccountProfile(){ AvatarFileURL = "https://www.looper.com/img/gallery/the-ending-of-death-note-explained/intro-1620395655.jpg", },
            ActivityStatus = new AccountActivityStatus(){ Name = "Busy", Icon = Icons.Material.Filled.RemoveCircle, IconColor = Color.Error.ToString()
        }, TimeCreated = DateTime.Now.AddDays(-4) }
    };

    void SearchChanged()
    {
        Console.WriteLine(searchTerm);
        filtered = accounts.Where(e => e.Name.ToLower().Contains(searchTerm.ToLower())).ToList();
        StateHasChanged();
    }
}