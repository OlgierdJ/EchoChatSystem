@page "/login"
@using CoreLib.Models
@using MudBlazor
@using CoreLib.WebAPI
@inject NavigationManager nav
@rendermode InteractiveAuto

<div id="unique_id_scroll_section" class="ma-0" style="height:100vh;overflow: auto;">
    <MudPaper Width="60%" Style="margin: 20%; padding: 50px 100px 50px 100px">
        <MudText Align="Align.Center" Typo="Typo.h4">ECHO LOGIN</MudText>
        <MudTextField @bind-Value="Email" Label="Email" Variant="Variant.Filled" InputType="InputType.Email" /> <!--  Adornment="Adornment.End" AdornmentIcon="Icons.Material.Filled.Email" -->
        <MudTextField @bind-Value="Password" Label="Password" Variant="Variant.Filled" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="PasswordVisibility" AdornmentAriaLabel="Show Password" />
        <MudButton class="pt-2" Variant="Variant.Filled" OnClick="AuthorizeLogin">Login</MudButton>
        <MudText>
            Need an account?
            <MudButton class="pt-2" Variant="Variant.Text" OnClick="GoToRegister">Register</MudButton>
        </MudText>
    </MudPaper>
</div>

@code {
    public string Password { get; set; } = "superstrong123";
    public string Email { get; set; } = "test@tec.dk";
    public readonly EchoAPI _echoAPI = new();
    UserLoginModel user = new();

    bool visible;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void PasswordVisibility()
    {
        if (visible)
        {
            visible = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            visible = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    //maybe receive status and display error
    async Task AuthorizeLogin()
    {
        user.Email = Email;
        user.Password = Password;

        //send user to api
        var data = await _echoAPI.LoginAsync(user);
        Console.WriteLine(data);
        //await localStorage.SetAsync("AccountId", data);
    }

    void GoToRegister()
    {
        nav.NavigateTo("/register");
    }
} 